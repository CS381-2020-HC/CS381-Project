Introduction
    The name of this language is Modified-C, which paradigm based on 
imperative languages, specifically on C language but not entirely. 
Notably, the scope and lifetime of the variable, which is one of the 
most typical features for C language, have been implemented in it.

Design
    This language has implemented the first four features on the menu, 
including basic data types and operations, conditionals, recursion or 
loops, and variables or local names. 
    First, three data types, consisting of the boolean value, integer 
number, and double-precision floating-point number, have been 
implemented with four kinds of mathematical operations and six types 
of comparison operations. Furthermore, this feature, which is designed 
based on the orthogonality principle and the compositionality 
principle to improve its logicality, is the core level. 
    Second, the conditional feature has been applied, which is similar 
to the form "if-then-else." Similarly, this feature is not only the 
core level but also designed based on these two principles 
mentioned above. Moreover, it also represents the completeness 
principle that can cover all the possible cases.
    Third, there are two types of loop methods, including "for" loop 
and "while" loop, which are also similar to C language. On the one 
hand, only this feature is the syntactic sugar level because the "for" 
loop can be rewritten by the "while" loop. On the other hand, although 
this feature violates the orthogonality principle, it still follows 
the style of C language to reduce the adaptation time from the C 
programmer to this language.
    Fourth, in addition to being based on those two principles stated 
at the beginning, the mutable variable and immutable local variable 
are also designed based on the invertibility principle through the 
scope and lifetime. Therefore, all variables can be recycled after the 
end of their lifetime.
    In addition, this language is type-safe that not only the dynamic 
type errors can be reported at runtime. All of these errors will 
be dealt with through print "TError" and error message. 
Therefore, there is no undefined operation that happened during runtime.

Implementation
    There are two semantic domains in our language, the first one 
    There are three types of semantic domains chosen by this language, 
including the list of command; the variable consisting of scope name, 
variable name, and value; and the pair of two data types. Moreover, 
the most interesting aspect of it is the scope and lifetime of the 
variable because it can make this language support the local variable 
with the same name to the global variable. 


type safe
synmatic domain